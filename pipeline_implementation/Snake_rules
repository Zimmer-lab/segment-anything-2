rule sam2_segment:
    input:
        avi_path = "Path to the uncompressed AVI video file according to your Snakemake definition",
        dlc_csv = "Path to the corresponding DLC CSV tracking file, either downsampled or full according to configuration",
    output:
        output_file = "Path to the output file btf stack according to your snake workflow",
    params:
        script_path = "/lisc/scratch/neurobiology/zimmer/autoscope/code/segment-anything-2/pipeline_implementation/sam2-video-processing_from_jpeg_batch_pipeline.py"
        column_names = ["pharynx", "other"] -> coordinate inside the worm, can be one or many
        model_path = "/lisc/scratch/neurobiology/zimmer/autoscope/code/segment-anything-2"
        downsample_factor = 0 -> Downsample factor for video processing if used (default 0)
        batch_size = 2000 -> Batch size for processing video frames, can be finetuned to your data resolution (L40s GPUs have 48 GB memory)
    shell:
        """
        source /lisc/app/conda/miniconda3/bin/activate /lisc/scratch/neurobiology/zimmer/.conda/envs/SAM2_shared
        python {params.script_path} \
            -video_path {input.avi_path} \
            -output_file_path {output.output_file} \
            -DLC_csv_file_path {input.dlc_csv} \
            -column_names {params.column_names} \
            -SAM2_path {params.model_path} \
            --downsample_factor {params.downsample_factor} \
            --batch_size {params.batch_size}
        """

rule correct_SAM2_DLC_errors:
    input:
        mask_stack = "path/to/input/mask_stack.tiff"  # Adjust this path as needed
    output:
        processed_stack = "path/to/output/processed_stack.tiff"  # Adjust this path as needed
    params:
        script_path = "path/to/binary_mask_stack_processor.py",  # Adjust this to the actual path of your script
        min_worm_area = 100,  # Adjust these thresholds as needed
        max_worm_area = 1000
    shell:
        """
        python {params.script_path} \
            {input.mask_stack} \
            {output.processed_stack} \
            {params.min_worm_area} \
            {params.max_worm_area}
        """